package com.dcsoft.capmkt.orm;
// Generated Apr 7, 2016 5:45:36 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * ChUser generated by hbm2java
 */
@Entity
@Table(name = "ch_user", schema = "public")
public class ChUser implements java.io.Serializable {

	private BigDecimal userid;
	private String uname;
	private String upwd;
	private boolean isactive;
	private String firstname;
	private String middlename;
	private String lasname;
	private Date datecreated;
	private Set chUserGroupMappings = new HashSet(0);
	private Set chDapUserMappings = new HashSet(0);
	private Set chFapUserMappings = new HashSet(0);

	public ChUser() {
	}
	
	public ChUser(String uname, String upwd, boolean isactive) {
		this.uname = uname;
		this.upwd = upwd;
		this.isactive = isactive;
	}

	public ChUser(BigDecimal userid, String uname, String upwd, boolean isactive, String firstname, String lasname) {
		this.userid = userid;
		this.uname = uname;
		this.upwd = upwd;
		this.isactive = isactive;
		this.firstname = firstname;
		this.lasname = lasname;
	}

	public ChUser(BigDecimal userid, String uname, String upwd, boolean isactive, String firstname, String middlename,
			String lasname, Date datecreated, Set chUserGroupMappings) {
		this.userid = userid;
		this.uname = uname;
		this.upwd = upwd;
		this.isactive = isactive;
		this.firstname = firstname;
		this.middlename = middlename;
		this.lasname = lasname;
		this.datecreated = datecreated;
		this.chUserGroupMappings = chUserGroupMappings;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "userid", unique = true, nullable = false, scale = 0)
	public BigDecimal getUserid() {
		return this.userid;
	}

	public void setUserid(BigDecimal userid) {
		this.userid = userid;
	}

	@Column(name = "uname", nullable = false, length = 100)
	public String getUname() {
		return this.uname;
	}

	public void setUname(String uname) {
		this.uname = uname;
	}

	@Column(name = "upwd", nullable = false, length = 100)
	public String getUpwd() {
		return this.upwd;
	}

	public void setUpwd(String upwd) {
		this.upwd = upwd;
	}

	@Column(name = "isactive", nullable = false)
	public boolean isIsactive() {
		return this.isactive;
	}

	public void setIsactive(boolean isactive) {
		this.isactive = isactive;
	}

	@Column(name = "firstname", nullable = false, length = 100)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "middlename", length = 100)
	public String getMiddlename() {
		return this.middlename;
	}

	public void setMiddlename(String middlename) {
		this.middlename = middlename;
	}

	@Column(name = "lasname", nullable = false, length = 100)
	public String getLasname() {
		return this.lasname;
	}

	public void setLasname(String lasname) {
		this.lasname = lasname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datecreated", length = 13)
	public Date getDatecreated() {
		return this.datecreated;
	}

	public void setDatecreated(Date datecreated) {
		this.datecreated = datecreated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chUser", targetEntity = ChUserGroupMapping.class)
	public Set getChUserGroupMappings() {
		return this.chUserGroupMappings;
	}

	public void setChUserGroupMappings(Set chUserGroupMappings) {
		this.chUserGroupMappings = chUserGroupMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chUser",targetEntity =ChDapUserMapping.class)
	public Set getChDapUserMappings() {
		return this.chDapUserMappings;
	}

	public void setChDapUserMappings(Set chDapUserMappings) {
		this.chDapUserMappings = chDapUserMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chUser",targetEntity =ChFapUserMapping.class)
	public Set getChFapUserMappings() {
		return this.chFapUserMappings;
	}

	public void setChFapUserMappings(Set chFapUserMappings) {
		this.chFapUserMappings = chFapUserMappings;
	}

}
